#include <Wire.h>
#include <VL6180X.h>

const unsigned int MOTORDIR_PINS[4] = {5, 7, 23, 15};
const unsigned int MOTORPWM_PINS[4] = {6, 8, 22, 14};

const int SENSOR_PINS[4] = {9,10,11,12};
VL6180X sensors[4];

void setupSensors() {
  for (int i = 0; i<4; i++) {
    pinMode(SENSOR_PINS[i], OUTPUT);
    digitalWrite(SENSOR_PINS[i], LOW);
  }

  // Addresing routine
  Wire.begin();
  for (int i = 0; i<4; i++) {
    digitalWrite(SENSOR_PINS[i], HIGH);
    delay(50);
    sensors[i].init();
    sensors[i].configureDefault();
    sensors[i].setTimeout(500);
    sensors[i].setAddress(0x54 + i*2);
  }
}

void setup() {
  for (int i = 0; i<4; i++) {
    pinMode(MOTORDIR_PINS[i], OUTPUT);
    pinMode(MOTORPWM_PINS[i], OUTPUT);

    digitalWrite(MOTORDIR_PINS[i], LOW);
    analogWrite(MOTORPWM_PINS[i], 0);
  }

  setupSensors();
}

void stopAll() {
  for (int i = 0; i<4; i++) {
    analogWrite(MOTORPWM_PINS[i], 0);
  }
}

void motor(int index, int speed, int direction) {
  digitalWrite(MOTORDIR_PINS[index], direction);
  analogWrite(MOTORPWM_PINS[index], speed);
}

void forward(int speed) {
  analogWrite(1, 0);
  analogWrite(3, 0);

  motor(0, 100, LOW);
  motor(2, 100, HIGH);
}

void backward(int speed) {
  analogWrite(1, 0);
  analogWrite(3, 0);

  motor(0, 100, HIGH);
  motor(2, 100, LOW);
}

void right(int speed) {
  analogWrite(0, 0);
  analogWrite(2, 0);

  motor(1, 100, LOW);
  motor(3, 100, LOW);
}

void left(int speed) {
  analogWrite(0, 0);
  analogWrite(2, 0);

  motor(1, 100, HIGH);
  motor(3, 100, HIGH);
}

void loop() {
  const int sensor1Value = sensor1.readRangeSingleMillimeters();
  const int sensor2Value = sensor2.readRangeSingleMillimeters();
  const int sensor3Value = sensor3.readRangeSingleMillimeters();
  const int sensor4Value = sensor4.readRangeSingleMillimeters();

  // 3 bits - 8 possibilities 
  // bit1 bit2 bit3
  // 000 not move (0)
  // 001 left (1)
  // 010 right (2)
  // 011 forward (3)
  // 100 back (4)
  gpio1_val = digitalRead(gpio_pin_1); 
  gpio2_val = digitalRead(gpio_pin_2);
  gpio3_val = digitalRead(gpio_pin_3);
  bot_direction = 4*gpio1_val + 2*gpio2_val + 1*gpio3_val;




  if (bot_direction ==0) {
     stopAll()
  } else if (bot_direction==1) {
    left(100);
  } else if (bot_direction==2) {
    right(100);
  } else if (bot_direction==3) {
    forward(100);
  }
  else if (bot_direction==4){
    backward(100);
  }
  else {
    stopAll()
  }
  delay(500);
}
